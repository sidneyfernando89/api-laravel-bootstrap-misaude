/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/src/js/custom/documentation/general/cropper.js":
/*!******************************************************************!*\
  !*** ./resources/src/js/custom/documentation/general/cropper.js ***!
  \******************************************************************/
/***/ (() => {

eval("/*\r\n * ATTENTION: An \"eval-source-map\" devtool has been used.\r\n * This devtool is neither made for production nor for readable output files.\r\n * It uses \"eval()\" calls to create a separate source file with attached SourceMaps in the browser devtools.\r\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\r\n * or disable the default devtool with \"devtool: false\".\r\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\r\n */\n\n/******/\n(function () {\n  // webpackBootstrap\n\n  /******/\n  \"use strict\";\n  /******/\n\n  var __webpack_modules__ = {\n    /***/\n    \"./resources/assets/core/js/custom/documentation/general/cropper.js\":\n    /*!**************************************************************************!*\\\r\n      !*** ./resources/assets/core/js/custom/documentation/general/cropper.js ***!\r\n      \\**************************************************************************/\n\n    /***/\n    function resourcesAssetsCoreJsCustomDocumentationGeneralCropperJs() {\n      eval(\" // Class definition\\n\\nvar KTCropperDemo = function () {\\n  // Private functions\\n  var initCropperDemo = function initCropperDemo() {\\n    var image = document.getElementById('image');\\n    var options = {\\n      crop: function crop(event) {\\n        document.getElementById('dataX').value = Math.round(event.detail.x);\\n        document.getElementById('dataY').value = Math.round(event.detail.y);\\n        document.getElementById('dataWidth').value = Math.round(event.detail.width);\\n        document.getElementById('dataHeight').value = Math.round(event.detail.height);\\n        document.getElementById('dataRotate').value = event.detail.rotate;\\n        document.getElementById('dataScaleX').value = event.detail.scaleX;\\n        document.getElementById('dataScaleY').value = event.detail.scaleY;\\n        var lg = document.getElementById('cropper-preview-lg');\\n        lg.innerHTML = '';\\n        lg.appendChild(cropper.getCroppedCanvas({\\n          width: 256,\\n          height: 160\\n        }));\\n        var md = document.getElementById('cropper-preview-md');\\n        md.innerHTML = '';\\n        md.appendChild(cropper.getCroppedCanvas({\\n          width: 128,\\n          height: 80\\n        }));\\n        var sm = document.getElementById('cropper-preview-sm');\\n        sm.innerHTML = '';\\n        sm.appendChild(cropper.getCroppedCanvas({\\n          width: 64,\\n          height: 40\\n        }));\\n        var xs = document.getElementById('cropper-preview-xs');\\n        xs.innerHTML = '';\\n        xs.appendChild(cropper.getCroppedCanvas({\\n          width: 32,\\n          height: 20\\n        }));\\n      }\\n    };\\n    var cropper = new Cropper(image, options);\\n    var buttons = document.getElementById('cropper-buttons');\\n    var methods = buttons.querySelectorAll('[data-method]');\\n    methods.forEach(function (button) {\\n      button.addEventListener('click', function (e) {\\n        var method = button.getAttribute('data-method');\\n        var option = button.getAttribute('data-option');\\n        var option2 = button.getAttribute('data-second-option');\\n\\n        try {\\n          option = JSON.parse(option);\\n        } catch (e) {}\\n\\n        var result;\\n\\n        if (!option2) {\\n          result = cropper[method](option, option2);\\n        } else if (option) {\\n          result = cropper[method](option);\\n        } else {\\n          result = cropper[method]();\\n        }\\n\\n        if (method === 'getCroppedCanvas') {\\n          var modal = document.getElementById('getCroppedCanvasModal');\\n          var modalBody = modal.querySelector('.modal-body');\\n          modalBody.innerHTML = '';\\n          modalBody.appendChild(result);\\n        }\\n\\n        var input = document.querySelector('#putData');\\n\\n        try {\\n          input.value = JSON.stringify(result);\\n        } catch (e) {\\n          if (!result) {\\n            input.value = result;\\n          }\\n        }\\n      });\\n    }); // set aspect ratio option buttons\\n\\n    var radioOptions = document.getElementById('setAspectRatio').querySelectorAll('[name=\\\"aspectRatio\\\"]');\\n    radioOptions.forEach(function (button) {\\n      button.addEventListener('click', function (e) {\\n        cropper.setAspectRatio(e.target.value);\\n      });\\n    }); // set view mode\\n\\n    var viewModeOptions = document.getElementById('viewMode').querySelectorAll('[name=\\\"viewMode\\\"]');\\n    viewModeOptions.forEach(function (button) {\\n      button.addEventListener('click', function (e) {\\n        cropper.destroy();\\n        cropper = new Cropper(image, Object.assign({}, options, {\\n          viewMode: e.target.value\\n        }));\\n      });\\n    });\\n    var toggleoptions = document.getElementById('toggleOptionButtons').querySelectorAll('[type=\\\"checkbox\\\"]');\\n    toggleoptions.forEach(function (checkbox) {\\n      checkbox.addEventListener('click', function (e) {\\n        var appendOption = {};\\n        appendOption[e.target.getAttribute('name')] = e.target.checked;\\n        options = Object.assign({}, options, appendOption);\\n        cropper.destroy();\\n        cropper = new Cropper(image, options);\\n      });\\n    });\\n  };\\n\\n  return {\\n    // public functions\\n    init: function init() {\\n      initCropperDemo();\\n    }\\n  };\\n}(); // On document ready\\n\\n\\nKTUtil.onDOMContentLoaded(function () {\\n  KTCropperDemo.init();\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvYXNzZXRzL2NvcmUvanMvY3VzdG9tL2RvY3VtZW50YXRpb24vZ2VuZXJhbC9jcm9wcGVyLmpzLmpzIiwibWFwcGluZ3MiOiJDQUVBOztBQUNBLElBQUlBLGFBQWEsR0FBRyxZQUFZO0FBRS9CO0FBQ0EsTUFBSUMsZUFBZSxHQUFHLFNBQWxCQSxlQUFrQixHQUFZO0FBQ2pDLFFBQUlDLEtBQUssR0FBR0MsUUFBUSxDQUFDQyxjQUFULENBQXdCLE9BQXhCLENBQVo7QUFFQSxRQUFJQyxPQUFPLEdBQUc7QUFDYkMsTUFBQUEsSUFBSSxFQUFFLGNBQVVDLEtBQVYsRUFBaUI7QUFDdEJKLFFBQUFBLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QixPQUF4QixFQUFpQ0ksS0FBakMsR0FBeUNDLElBQUksQ0FBQ0MsS0FBTCxDQUFXSCxLQUFLLENBQUNJLE1BQU4sQ0FBYUMsQ0FBeEIsQ0FBekM7QUFDQVQsUUFBQUEsUUFBUSxDQUFDQyxjQUFULENBQXdCLE9BQXhCLEVBQWlDSSxLQUFqQyxHQUF5Q0MsSUFBSSxDQUFDQyxLQUFMLENBQVdILEtBQUssQ0FBQ0ksTUFBTixDQUFhRSxDQUF4QixDQUF6QztBQUNBVixRQUFBQSxRQUFRLENBQUNDLGNBQVQsQ0FBd0IsV0FBeEIsRUFBcUNJLEtBQXJDLEdBQTZDQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0gsS0FBSyxDQUFDSSxNQUFOLENBQWFHLEtBQXhCLENBQTdDO0FBQ0FYLFFBQUFBLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QixZQUF4QixFQUFzQ0ksS0FBdEMsR0FBOENDLElBQUksQ0FBQ0MsS0FBTCxDQUFXSCxLQUFLLENBQUNJLE1BQU4sQ0FBYUksTUFBeEIsQ0FBOUM7QUFDQVosUUFBQUEsUUFBUSxDQUFDQyxjQUFULENBQXdCLFlBQXhCLEVBQXNDSSxLQUF0QyxHQUE4Q0QsS0FBSyxDQUFDSSxNQUFOLENBQWFLLE1BQTNEO0FBQ0FiLFFBQUFBLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QixZQUF4QixFQUFzQ0ksS0FB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LE9BQUosQ0FBWXpCLEtBQVosRUFBbUJHLE9BQW5CLENBQVY7QUFDQSxPQU5EO0FBT0EsS0FSRDtBQVNBLEdBeEdEOztBQTBHQSxTQUFPO0FBQ047QUFDQXNELElBQUFBLElBQUksRUFBRSxnQkFBWTtBQUNqQjFELE1BQUFBLGVBQWU7QUFDZjtBQUpLLEdBQVA7QUFNQSxDQW5IbUIsRUFBcEIsQyxDQXFIQTs7O0FBQ0EyRCxNQUFNLENBQUNDLGtCQUFQLENBQTBCLFlBQVk7QUFDckM3RCxFQUFBQSxhQUFhLENBQUMyRCxJQUFkO0FBQ0EsQ0FGRCIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9hc3NldHMvY29yZS9qcy9jdXN0b20vZG9jdW1lbnRhdGlvbi9nZW5lcmFsL2Nyb3BwZXIuanM/YjkwNyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG4vLyBDbGFzcyBkZWZpbml0aW9uXHJcbnZhciBLVENyb3BwZXJEZW1vID0gZnVuY3Rpb24gKCkge1xyXG5cclxuXHQvLyBQcml2YXRlIGZ1bmN0aW9uc1xyXG5cdHZhciBpbml0Q3JvcHBlckRlbW8gPSBmdW5jdGlvbiAoKSB7XHJcblx0XHR2YXIgaW1hZ2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW1hZ2UnKTtcclxuXHJcblx0XHR2YXIgb3B0aW9ucyA9IHtcclxuXHRcdFx0Y3JvcDogZnVuY3Rpb24gKGV2ZW50KSB7XHJcblx0XHRcdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2RhdGFYJykudmFsdWUgPSBNYXRoLnJvdW5kKGV2ZW50LmRldGFpbC54KTtcclxuXHRcdFx0XHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGF0YVknKS52YWx1ZSA9IE1hdGgucm91bmQoZXZlbnQuZGV0YWlsLnkpO1xyXG5cdFx0XHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkYXRhV2lkdGgnKS52YWx1ZSA9IE1hdGgucm91bmQoZXZlbnQuZGV0YWlsLndpZHRoKTtcclxuXHRcdFx0XHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGF0YUhlaWdodCcpLnZhbHVlID0gTWF0aC5yb3VuZChldmVudC5kZXRhaWwuaGVpZ2h0KTtcclxuXHRcdFx0XHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGF0YVJvdGF0ZScpLnZhbHVlID0gZXZlbnQuZGV0YWlsLnJvdGF0ZTtcclxuXHRcdFx0XHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGF0YVNjYWxlWCcpLnZhbHVlID0gZXZlbnQuZGV0YWlsLnNjYWxlWDtcclxuXHRcdFx0XHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGF0YVNjYWxlWScpLnZhbHVlID0gZXZlbnQuZGV0YWlsLnNjYWxlWTtcclxuXHJcblx0XHRcdFx0dmFyIGxnID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Nyb3BwZXItcHJldmlldy1sZycpO1xyXG5cdFx0XHRcdGxnLmlubmVySFRNTCA9ICcnO1xyXG5cdFx0XHRcdGxnLmFwcGVuZENoaWxkKGNyb3BwZXIuZ2V0Q3JvcHBlZENhbnZhcyh7IHdpZHRoOiAyNTYsIGhlaWdodDogMTYwIH0pKTtcclxuXHJcblx0XHRcdFx0dmFyIG1kID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Nyb3BwZXItcHJldmlldy1tZCcpO1xyXG5cdFx0XHRcdG1kLmlubmVySFRNTCA9ICcnO1xyXG5cdFx0XHRcdG1kLmFwcGVuZENoaWxkKGNyb3BwZXIuZ2V0Q3JvcHBlZENhbnZhcyh7IHdpZHRoOiAxMjgsIGhlaWdodDogODAgfSkpO1xyXG5cclxuXHRcdFx0XHR2YXIgc20gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY3JvcHBlci1wcmV2aWV3LXNtJyk7XHJcblx0XHRcdFx0c20uaW5uZXJIVE1MID0gJyc7XHJcblx0XHRcdFx0c20uYXBwZW5kQ2hpbGQoY3JvcHBlci5nZXRDcm9wcGVkQ2FudmFzKHsgd2lkdGg6IDY0LCBoZWlnaHQ6IDQwIH0pKTtcclxuXHJcblx0XHRcdFx0dmFyIHhzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Nyb3BwZXItcHJldmlldy14cycpO1xyXG5cdFx0XHRcdHhzLmlubmVySFRNTCA9ICcnO1xyXG5cdFx0XHRcdHhzLmFwcGVuZENoaWxkKGNyb3BwZXIuZ2V0Q3JvcHBlZENhbnZhcyh7IHdpZHRoOiAzMiwgaGVpZ2h0OiAyMCB9KSk7XHJcblx0XHRcdH0sXHJcblx0XHR9O1xyXG5cclxuXHRcdHZhciBjcm9wcGVyID0gbmV3IENyb3BwZXIoaW1hZ2UsIG9wdGlvbnMpO1xyXG5cclxuXHRcdHZhciBidXR0b25zID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Nyb3BwZXItYnV0dG9ucycpO1xyXG5cdFx0dmFyIG1ldGhvZHMgPSBidXR0b25zLnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLW1ldGhvZF0nKTtcclxuXHRcdG1ldGhvZHMuZm9yRWFjaChmdW5jdGlvbiAoYnV0dG9uKSB7XHJcblx0XHRcdGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7XHJcblx0XHRcdFx0dmFyIG1ldGhvZCA9IGJ1dHRvbi5nZXRBdHRyaWJ1dGUoJ2RhdGEtbWV0aG9kJyk7XHJcblx0XHRcdFx0dmFyIG9wdGlvbiA9IGJ1dHRvbi5nZXRBdHRyaWJ1dGUoJ2RhdGEtb3B0aW9uJyk7XHJcblx0XHRcdFx0dmFyIG9wdGlvbjIgPSBidXR0b24uZ2V0QXR0cmlidXRlKCdkYXRhLXNlY29uZC1vcHRpb24nKTtcclxuXHJcblx0XHRcdFx0dHJ5IHtcclxuXHRcdFx0XHRcdG9wdGlvbiA9IEpTT04ucGFyc2Uob3B0aW9uKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0Y2F0Y2ggKGUpIHtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdHZhciByZXN1bHQ7XHJcblx0XHRcdFx0aWYgKCFvcHRpb24yKSB7XHJcblx0XHRcdFx0XHRyZXN1bHQgPSBjcm9wcGVyW21ldGhvZF0ob3B0aW9uLCBvcHRpb24yKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0ZWxzZSBpZiAob3B0aW9uKSB7XHJcblx0XHRcdFx0XHRyZXN1bHQgPSBjcm9wcGVyW21ldGhvZF0ob3B0aW9uKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0ZWxzZSB7XHJcblx0XHRcdFx0XHRyZXN1bHQgPSBjcm9wcGVyW21ldGhvZF0oKTtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdGlmIChtZXRob2QgPT09ICdnZXRDcm9wcGVkQ2FudmFzJykge1xyXG5cdFx0XHRcdFx0dmFyIG1vZGFsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2dldENyb3BwZWRDYW52YXNNb2RhbCcpO1xyXG5cdFx0XHRcdFx0dmFyIG1vZGFsQm9keSA9IG1vZGFsLnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbC1ib2R5Jyk7XHJcblx0XHRcdFx0XHRtb2RhbEJvZHkuaW5uZXJIVE1MID0gJyc7XHJcblx0XHRcdFx0XHRtb2RhbEJvZHkuYXBwZW5kQ2hpbGQocmVzdWx0KTtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdHZhciBpbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNwdXREYXRhJyk7XHJcblx0XHRcdFx0dHJ5IHtcclxuXHRcdFx0XHRcdGlucHV0LnZhbHVlID0gSlNPTi5zdHJpbmdpZnkocmVzdWx0KTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0Y2F0Y2ggKGUpIHtcclxuXHRcdFx0XHRcdGlmICghcmVzdWx0KSB7XHJcblx0XHRcdFx0XHRcdGlucHV0LnZhbHVlID0gcmVzdWx0O1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSk7XHJcblx0XHR9KTtcclxuXHJcblx0XHQvLyBzZXQgYXNwZWN0IHJhdGlvIG9wdGlvbiBidXR0b25zXHJcblx0XHR2YXIgcmFkaW9PcHRpb25zID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NldEFzcGVjdFJhdGlvJykucXVlcnlTZWxlY3RvckFsbCgnW25hbWU9XCJhc3BlY3RSYXRpb1wiXScpO1xyXG5cdFx0cmFkaW9PcHRpb25zLmZvckVhY2goZnVuY3Rpb24gKGJ1dHRvbikge1xyXG5cdFx0XHRidXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xyXG5cdFx0XHRcdGNyb3BwZXIuc2V0QXNwZWN0UmF0aW8oZS50YXJnZXQudmFsdWUpO1xyXG5cdFx0XHR9KTtcclxuXHRcdH0pO1xyXG5cclxuXHRcdC8vIHNldCB2aWV3IG1vZGVcclxuXHRcdHZhciB2aWV3TW9kZU9wdGlvbnMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndmlld01vZGUnKS5xdWVyeVNlbGVjdG9yQWxsKCdbbmFtZT1cInZpZXdNb2RlXCJdJyk7XHJcblx0XHR2aWV3TW9kZU9wdGlvbnMuZm9yRWFjaChmdW5jdGlvbiAoYnV0dG9uKSB7XHJcblx0XHRcdGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7XHJcblx0XHRcdFx0Y3JvcHBlci5kZXN0cm95KCk7XHJcblx0XHRcdFx0Y3JvcHBlciA9IG5ldyBDcm9wcGVyKGltYWdlLCBPYmplY3QuYXNzaWduKHt9LCBvcHRpb25zLCB7IHZpZXdNb2RlOiBlLnRhcmdldC52YWx1ZSB9KSk7XHJcblx0XHRcdH0pO1xyXG5cdFx0fSk7XHJcblxyXG5cdFx0dmFyIHRvZ2dsZW9wdGlvbnMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndG9nZ2xlT3B0aW9uQnV0dG9ucycpLnF1ZXJ5U2VsZWN0b3JBbGwoJ1t0eXBlPVwiY2hlY2tib3hcIl0nKTtcclxuXHRcdHRvZ2dsZW9wdGlvbnMuZm9yRWFjaChmdW5jdGlvbiAoY2hlY2tib3gpIHtcclxuXHRcdFx0Y2hlY2tib3guYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xyXG5cdFx0XHRcdHZhciBhcHBlbmRPcHRpb24gPSB7fTtcclxuXHRcdFx0XHRhcHBlbmRPcHRpb25bZS50YXJnZXQuZ2V0QXR0cmlidXRlKCduYW1lJyldID0gZS50YXJnZXQuY2hlY2tlZDtcclxuXHRcdFx0XHRvcHRpb25zID0gT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucywgYXBwZW5kT3B0aW9uKTtcclxuXHRcdFx0XHRjcm9wcGVyLmRlc3Ryb3koKTtcclxuXHRcdFx0XHRjcm9wcGVyID0gbmV3IENyb3BwZXIoaW1hZ2UsIG9wdGlvbnMpO1xyXG5cdFx0XHR9KVxyXG5cdFx0fSk7XHJcblx0fTtcclxuXHJcblx0cmV0dXJuIHtcclxuXHRcdC8vIHB1YmxpYyBmdW5jdGlvbnNcclxuXHRcdGluaXQ6IGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0aW5pdENyb3BwZXJEZW1vKCk7XHJcblx0XHR9LFxyXG5cdH07XHJcbn0oKTtcclxuXHJcbi8vIE9uIGRvY3VtZW50IHJlYWR5XHJcbktUVXRpbC5vbkRPTUNvbnRlbnRMb2FkZWQoZnVuY3Rpb24gKCkge1xyXG5cdEtUQ3JvcHBlckRlbW8uaW5pdCgpO1xyXG59KTtcclxuIl0sIm5hbWVzIjpbIktUQ3JvcHBlckRlbW8iLCJpbml0Q3JvcHBlckRlbW8iLCJpbWFnZSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJvcHRpb25zIiwiY3JvcCIsImV2ZW50IiwidmFsdWUiLCJNYXRoIiwicm91bmQiLCJkZXRhaWwiLCJ4IiwieSIsIndpZHRoIiwiaGVpZ2h0Iiwicm90YXRlIiwic2NhbGVYIiwic2NhbGVZIiwibGciLCJpbm5lckhUTUwiLCJhcHBlbmRDaGlsZCIsImNyb3BwZXIiLCJnZXRDcm9wcGVkQ2FudmFzIiwibWQiLCJzbSIsInhzIiwiQ3JvcHBlciIsImJ1dHRvbnMiLCJtZXRob2RzIiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJidXR0b24iLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsIm1ldGhvZCIsImdldEF0dHJpYnV0ZSIsIm9wdGlvbiIsIm9wdGlvbjIiLCJKU09OIiwicGFyc2UiLCJyZXN1bHQiLCJtb2RhbCIsIm1vZGFsQm9keSIsInF1ZXJ5U2VsZWN0b3IiLCJpbnB1dCIsInN0cmluZ2lmeSIsInJhZGlvT3B0aW9ucyIsInNldEFzcGVjdFJhdGlvIiwidGFyZ2V0Iiwidmlld01vZGVPcHRpb25zIiwiZGVzdHJveSIsIk9iamVjdCIsImFzc2lnbiIsInZpZXdNb2RlIiwidG9nZ2xlb3B0aW9ucyIsImNoZWNrYm94IiwiYXBwZW5kT3B0aW9uIiwiY2hlY2tlZCIsImluaXQiLCJLVFV0aWwiLCJvbkRPTUNvbnRlbnRMb2FkZWQiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/documentation/general/cropper.js\\n\");\n      /***/\n    }\n    /******/\n\n  };\n  /************************************************************************/\n\n  /******/\n\n  /******/\n  // startup\n\n  /******/\n  // Load entry module and return exports\n\n  /******/\n  // This entry module can't be inlined because the eval-source-map devtool is used.\n\n  /******/\n\n  var __webpack_exports__ = {};\n  /******/\n\n  __webpack_modules__[\"./resources/assets/core/js/custom/documentation/general/cropper.js\"]();\n  /******/\n\n  /******/\n\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/custom/documentation/general/cropper.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/src/js/custom/documentation/general/cropper.js"]();
/******/ 	
/******/ })()
;