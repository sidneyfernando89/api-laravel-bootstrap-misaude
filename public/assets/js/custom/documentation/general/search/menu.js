/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/src/js/custom/documentation/general/search/menu.js":
/*!**********************************************************************!*\
  !*** ./resources/src/js/custom/documentation/general/search/menu.js ***!
  \**********************************************************************/
/***/ (() => {

eval("/*\r\n * ATTENTION: An \"eval-source-map\" devtool has been used.\r\n * This devtool is neither made for production nor for readable output files.\r\n * It uses \"eval()\" calls to create a separate source file with attached SourceMaps in the browser devtools.\r\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\r\n * or disable the default devtool with \"devtool: false\".\r\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\r\n */\n\n/******/\n(function () {\n  // webpackBootstrap\n\n  /******/\n  \"use strict\";\n  /******/\n\n  var __webpack_modules__ = {\n    /***/\n    \"./resources/assets/core/js/custom/documentation/general/search/menu.js\":\n    /*!******************************************************************************!*\\\r\n      !*** ./resources/assets/core/js/custom/documentation/general/search/menu.js ***!\r\n      \\******************************************************************************/\n\n    /***/\n    function resourcesAssetsCoreJsCustomDocumentationGeneralSearchMenuJs() {\n      eval(\" // Class definition\\n\\nvar KTGeneralSearchMenuDemos = function () {\\n  // Private variables\\n  var element;\\n  var formElement;\\n  var mainElement;\\n  var resultsElement;\\n  var wrapperElement;\\n  var emptyElement;\\n  var preferencesElement;\\n  var preferencesShowElement;\\n  var preferencesDismissElement;\\n  var advancedOptionsFormElement;\\n  var advancedOptionsFormShowElement;\\n  var advancedOptionsFormCancelElement;\\n  var advancedOptionsFormSearchElement;\\n  var searchObject; // Private functions\\n\\n  var processs = function processs(search) {\\n    var timeout = setTimeout(function () {\\n      var number = KTUtil.getRandomInt(1, 3); // Hide recently viewed\\n\\n      mainElement.classList.add('d-none');\\n\\n      if (number === 3) {\\n        // Hide results\\n        resultsElement.classList.add('d-none'); // Show empty message \\n\\n        emptyElement.classList.remove('d-none');\\n      } else {\\n        // Show results\\n        resultsElement.classList.remove('d-none'); // Hide empty message \\n\\n        emptyElement.classList.add('d-none');\\n      } // Complete search\\n\\n\\n      search.complete();\\n    }, 1500);\\n  };\\n\\n  var clear = function clear(search) {\\n    // Show recently viewed\\n    mainElement.classList.remove('d-none'); // Hide results\\n\\n    resultsElement.classList.add('d-none'); // Hide empty message \\n\\n    emptyElement.classList.add('d-none');\\n  };\\n\\n  var handlePreferences = function handlePreferences() {\\n    // Preference show handler\\n    preferencesShowElement.addEventListener('click', function () {\\n      wrapperElement.classList.add('d-none');\\n      preferencesElement.classList.remove('d-none');\\n    }); // Preference dismiss handler\\n\\n    preferencesDismissElement.addEventListener('click', function () {\\n      wrapperElement.classList.remove('d-none');\\n      preferencesElement.classList.add('d-none');\\n    });\\n  };\\n\\n  var handleAdvancedOptionsForm = function handleAdvancedOptionsForm() {\\n    // Show\\n    advancedOptionsFormShowElement.addEventListener('click', function () {\\n      wrapperElement.classList.add('d-none');\\n      advancedOptionsFormElement.classList.remove('d-none');\\n    }); // Cancel\\n\\n    advancedOptionsFormCancelElement.addEventListener('click', function () {\\n      wrapperElement.classList.remove('d-none');\\n      advancedOptionsFormElement.classList.add('d-none');\\n    }); // Search\\n\\n    advancedOptionsFormSearchElement.addEventListener('click', function () {});\\n  }; // Public methods\\n\\n\\n  return {\\n    init: function init() {\\n      // Elements\\n      element = document.querySelector('#kt_docs_search_handler_menu');\\n\\n      if (!element) {\\n        return;\\n      }\\n\\n      wrapperElement = element.querySelector('[data-kt-search-element=\\\"wrapper\\\"]');\\n      formElement = element.querySelector('[data-kt-search-element=\\\"form\\\"]');\\n      mainElement = element.querySelector('[data-kt-search-element=\\\"main\\\"]');\\n      resultsElement = element.querySelector('[data-kt-search-element=\\\"results\\\"]');\\n      emptyElement = element.querySelector('[data-kt-search-element=\\\"empty\\\"]');\\n      preferencesElement = element.querySelector('[data-kt-search-element=\\\"preferences\\\"]');\\n      preferencesShowElement = element.querySelector('[data-kt-search-element=\\\"preferences-show\\\"]');\\n      preferencesDismissElement = element.querySelector('[data-kt-search-element=\\\"preferences-dismiss\\\"]');\\n      advancedOptionsFormElement = element.querySelector('[data-kt-search-element=\\\"advanced-options-form\\\"]');\\n      advancedOptionsFormShowElement = element.querySelector('[data-kt-search-element=\\\"advanced-options-form-show\\\"]');\\n      advancedOptionsFormCancelElement = element.querySelector('[data-kt-search-element=\\\"advanced-options-form-cancel\\\"]');\\n      advancedOptionsFormSearchElement = element.querySelector('[data-kt-search-element=\\\"advanced-options-form-search\\\"]'); // Initialize search handler\\n\\n      searchObject = new KTSearch(element); // Search handler\\n\\n      searchObject.on('kt.search.process', processs); // Clear handler\\n\\n      searchObject.on('kt.search.clear', clear); // Custom handlers\\n\\n      handlePreferences();\\n      handleAdvancedOptionsForm();\\n    }\\n  };\\n}(); // On document ready\\n\\n\\nKTUtil.onDOMContentLoaded(function () {\\n  KTGeneralSearchMenuDemos.init();\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/documentation/general/search/menu.js\\n\");\n      /***/\n    }\n    /******/\n\n  };\n  /************************************************************************/\n\n  /******/\n\n  /******/\n  // startup\n\n  /******/\n  // Load entry module and return exports\n\n  /******/\n  // This entry module can't be inlined because the eval-source-map devtool is used.\n\n  /******/\n\n  var __webpack_exports__ = {};\n  /******/\n\n  __webpack_modules__[\"./resources/assets/core/js/custom/documentation/general/search/menu.js\"]();\n  /******/\n\n  /******/\n\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/custom/documentation/general/search/menu.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/src/js/custom/documentation/general/search/menu.js"]();
/******/ 	
/******/ })()
;