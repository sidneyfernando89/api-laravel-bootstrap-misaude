/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/src/js/custom/documentation/general/vis-timeline/template.js":
/*!********************************************************************************!*\
  !*** ./resources/src/js/custom/documentation/general/vis-timeline/template.js ***!
  \********************************************************************************/
/***/ (() => {

eval("/*\r\n * ATTENTION: An \"eval-source-map\" devtool has been used.\r\n * This devtool is neither made for production nor for readable output files.\r\n * It uses \"eval()\" calls to create a separate source file with attached SourceMaps in the browser devtools.\r\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\r\n * or disable the default devtool with \"devtool: false\".\r\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\r\n */\n\n/******/\n(function () {\n  // webpackBootstrap\n\n  /******/\n  \"use strict\";\n  /******/\n\n  var __webpack_modules__ = {\n    /***/\n    \"./resources/assets/core/js/custom/documentation/general/vis-timeline/template.js\":\n    /*!****************************************************************************************!*\\\r\n      !*** ./resources/assets/core/js/custom/documentation/general/vis-timeline/template.js ***!\r\n      \\****************************************************************************************/\n\n    /***/\n    function resourcesAssetsCoreJsCustomDocumentationGeneralVisTimelineTemplateJs() {\n      eval(\" // Class definition\\n\\nvar KTVisTimelineTemplate = function () {\\n  // Template data --- handlebars is used as the template for this demo. For more info: https://handlebarsjs.com/\\n  var data = \\\"<table class=\\\\\\\"score\\\\\\\">\\\\n        <tr>\\\\n            <td colspan=\\\\\\\"3\\\\\\\" class=\\\\\\\"description\\\\\\\">\\\\n                {{ description }}\\\\n            </td>\\\\n        </tr>\\\\n        <tr>\\\\n            <td>{{ player1 }}</td>\\\\n        <th>\\\\n            {{ score1 }} - {{ score2 }}\\\\n        </th>\\\\n            <td>{{ player2 }}</td>\\\\n        </tr>\\\\n        <tr>\\\\n            <td>\\\\n                <img\\\\n                src=\\\\\\\"https://flagpedia.net/data/flags/mini/{{abbr1}}.png\\\\\\\"\\\\n                width=\\\\\\\"31\\\\\\\"\\\\n                height=\\\\\\\"20\\\\\\\"\\\\n                alt=\\\\\\\"{{abbr1}}\\\\\\\"\\\\n                />\\\\n            </td>\\\\n        <th></th>\\\\n            <td>\\\\n                <img\\\\n                src=\\\\\\\"https://flagpedia.net/data/flags/mini/{{abbr2}}.png\\\\\\\"\\\\n                width=\\\\\\\"31\\\\\\\"\\\\n                height=\\\\\\\"20\\\\\\\"\\\\n                alt=\\\\\\\"{{abbr2}}\\\\\\\"\\\\n                />\\\\n            </td>\\\\n        </tr>\\\\n    </table>\\\"; // Private functions\\n\\n  var exampleTemplate = function exampleTemplate() {\\n    // create a handlebars template --- For more info: https://handlebarsjs.com/\\n    var template = Handlebars.compile(data); // DOM element where the Timeline will be attached\\n\\n    var container = document.getElementById(\\\"kt_docs_vistimeline_template\\\"); // Create a DataSet (allows two way data-binding)\\n\\n    var items = new vis.DataSet([// round of 16\\n    {\\n      player1: \\\"Brazil\\\",\\n      abbr1: \\\"br\\\",\\n      score1: \\\"1 (3)\\\",\\n      player2: \\\"Chile\\\",\\n      abbr2: \\\"cl\\\",\\n      score2: \\\"1 (2)\\\",\\n      description: \\\"round of 16\\\",\\n      start: \\\"2014-06-28T13:00:00\\\"\\n    }, {\\n      player1: \\\"Colombia\\\",\\n      abbr1: \\\"co\\\",\\n      score1: 2,\\n      player2: \\\"Uruguay\\\",\\n      abbr2: \\\"uy\\\",\\n      score2: 0,\\n      description: \\\"round of 16\\\",\\n      start: \\\"2014-06-28T17:00:00\\\"\\n    }, {\\n      player1: \\\"Netherlands\\\",\\n      abbr1: \\\"nl\\\",\\n      score1: 2,\\n      player2: \\\"Mexico\\\",\\n      abbr2: \\\"mx\\\",\\n      score2: 1,\\n      description: \\\"round of 16\\\",\\n      start: \\\"2014-06-29T13:00:00\\\"\\n    }, {\\n      player1: \\\"Costa Rica\\\",\\n      abbr1: \\\"cr\\\",\\n      score1: \\\"1 (5)\\\",\\n      player2: \\\"Greece\\\",\\n      abbr2: \\\"gr\\\",\\n      score2: \\\"1 (3)\\\",\\n      description: \\\"round of 16\\\",\\n      start: \\\"2014-06-29T17:00:00\\\"\\n    }, {\\n      player1: \\\"France\\\",\\n      abbr1: \\\"fr\\\",\\n      score1: 2,\\n      player2: \\\"Nigeria\\\",\\n      abbr2: \\\"ng\\\",\\n      score2: 0,\\n      description: \\\"round of 16\\\",\\n      start: \\\"2014-06-30T13:00:00\\\"\\n    }, {\\n      player1: \\\"Germany\\\",\\n      abbr1: \\\"de\\\",\\n      score1: 2,\\n      player2: \\\"Algeria\\\",\\n      abbr2: \\\"dz\\\",\\n      score2: 1,\\n      description: \\\"round of 16\\\",\\n      start: \\\"2014-06-30T17:00:00\\\"\\n    }, {\\n      player1: \\\"Argentina\\\",\\n      abbr1: \\\"ar\\\",\\n      score1: 1,\\n      player2: \\\"Switzerland\\\",\\n      abbr2: \\\"ch\\\",\\n      score2: 0,\\n      description: \\\"round of 16\\\",\\n      start: \\\"2014-07-01T13:00:00\\\"\\n    }, {\\n      player1: \\\"Belgium\\\",\\n      abbr1: \\\"be\\\",\\n      score1: 2,\\n      player2: \\\"USA\\\",\\n      abbr2: \\\"us\\\",\\n      score2: 1,\\n      description: \\\"round of 16\\\",\\n      start: \\\"2014-07-01T17:00:00\\\"\\n    }, // quarter-finals\\n    {\\n      player1: \\\"France\\\",\\n      abbr1: \\\"fr\\\",\\n      score1: 0,\\n      player2: \\\"Germany\\\",\\n      abbr2: \\\"de\\\",\\n      score2: 1,\\n      description: \\\"quarter-finals\\\",\\n      start: \\\"2014-07-04T13:00:00\\\"\\n    }, {\\n      player1: \\\"Brazil\\\",\\n      abbr1: \\\"br\\\",\\n      score1: 2,\\n      player2: \\\"Colombia\\\",\\n      abbr2: \\\"co\\\",\\n      score2: 1,\\n      description: \\\"quarter-finals\\\",\\n      start: \\\"2014-07-04T17:00:00\\\"\\n    }, {\\n      player1: \\\"Argentina\\\",\\n      abbr1: \\\"ar\\\",\\n      score1: 1,\\n      player2: \\\"Belgium\\\",\\n      abbr2: \\\"be\\\",\\n      score2: 0,\\n      description: \\\"quarter-finals\\\",\\n      start: \\\"2014-07-05T13:00:00\\\"\\n    }, {\\n      player1: \\\"Netherlands\\\",\\n      abbr1: \\\"nl\\\",\\n      score1: \\\"0 (4)\\\",\\n      player2: \\\"Costa Rica\\\",\\n      abbr2: \\\"cr\\\",\\n      score2: \\\"0 (3)\\\",\\n      description: \\\"quarter-finals\\\",\\n      start: \\\"2014-07-05T17:00:00\\\"\\n    }, // semi-finals\\n    {\\n      player1: \\\"Brazil\\\",\\n      abbr1: \\\"br\\\",\\n      score1: 1,\\n      player2: \\\"Germany\\\",\\n      abbr2: \\\"de\\\",\\n      score2: 7,\\n      description: \\\"semi-finals\\\",\\n      start: \\\"2014-07-08T17:00:00\\\"\\n    }, {\\n      player1: \\\"Netherlands\\\",\\n      abbr1: \\\"nl\\\",\\n      score1: \\\"0 (2)\\\",\\n      player2: \\\"Argentina\\\",\\n      abbr2: \\\"ar\\\",\\n      score2: \\\"0 (4)\\\",\\n      description: \\\"semi-finals\\\",\\n      start: \\\"2014-07-09T17:00:00\\\"\\n    }, // final\\n    {\\n      player1: \\\"Germany\\\",\\n      score1: 1,\\n      abbr1: \\\"de\\\",\\n      player2: \\\"Argentina\\\",\\n      abbr2: \\\"ar\\\",\\n      score2: 0,\\n      description: \\\"final\\\",\\n      start: \\\"2014-07-13T16:00:00\\\"\\n    }]); // Configuration for the Timeline\\n\\n    var options = {\\n      // specify a template for the items\\n      template: template\\n    }; // Create a Timeline\\n\\n    var timeline = new vis.Timeline(container, items, options);\\n  };\\n\\n  return {\\n    // Public Functions\\n    init: function init() {\\n      exampleTemplate();\\n    }\\n  };\\n}(); // On document ready\\n\\n\\nKTUtil.onDOMContentLoaded(function () {\\n  KTVisTimelineTemplate.init();\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/documentation/general/vis-timeline/template.js\\n\");\n      /***/\n    }\n    /******/\n\n  };\n  /************************************************************************/\n\n  /******/\n\n  /******/\n  // startup\n\n  /******/\n  // Load entry module and return exports\n\n  /******/\n  // This entry module can't be inlined because the eval-source-map devtool is used.\n\n  /******/\n\n  var __webpack_exports__ = {};\n  /******/\n\n  __webpack_modules__[\"./resources/assets/core/js/custom/documentation/general/vis-timeline/template.js\"]();\n  /******/\n\n  /******/\n\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/custom/documentation/general/vis-timeline/template.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/src/js/custom/documentation/general/vis-timeline/template.js"]();
/******/ 	
/******/ })()
;